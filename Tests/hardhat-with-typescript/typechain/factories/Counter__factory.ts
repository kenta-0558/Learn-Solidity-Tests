/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "CountedTo",
    type: "event",
  },
  {
    inputs: [],
    name: "countUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "countdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506103f7806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630bd8599e14610046578063a87d942c14610064578063cba8887214610082575b600080fd5b61004e6100a0565b60405161005b9190610280565b60405180910390f35b61006c610141565b6040516100799190610280565b60405180910390f35b61008a61014a565b6040516100979190610280565b60405180910390f35b60008060016000546100b291906102ac565b905060005481116100f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ef90610240565b60405180910390fd5b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040516101309190610280565b60405180910390a160005491505090565b60008054905090565b600080600160005461015c9190610302565b905060005481106101a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019990610260565b60405180910390fd5b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040516101da9190610280565b60405180910390a160005491505090565b60006101f860108361029b565b91506102038261036f565b602082019050919050565b600061021b60128361029b565b915061022682610398565b602082019050919050565b61023a81610336565b82525050565b60006020820190508181036000830152610259816101eb565b9050919050565b600060208201905081810360008301526102798161020e565b9050919050565b60006020820190506102956000830184610231565b92915050565b600082825260208201905092915050565b60006102b782610336565b91506102c283610336565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102f7576102f6610340565b5b828201905092915050565b600061030d82610336565b915061031883610336565b92508282101561032b5761032a610340565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f75696e743235362030766572666c6f7700000000000000000000000000000000600082015250565b7f75696e7432353620756e646572666c6f7777000000000000000000000000000060008201525056fea26469706673582212207e42e22bce0574892d0dcdde7e4526aaa815a3ed6b5547040f29e3cf5905862364736f6c63430008030033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
