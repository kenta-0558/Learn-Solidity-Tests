/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyERC20, MyERC20Interface } from "../MyERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintUpTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f4b494943484920544f4b454e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f4b5454000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000171565b508060049080519060200190620000af92919062000171565b5050506000620000c46200016960201b60201c565b905080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000286565b600033905090565b8280546200017f9062000221565b90600052602060002090601f016020900481019282620001a35760008555620001ef565b82601f10620001be57805160ff1916838001178555620001ef565b82800160010185558215620001ef579182015b82811115620001ee578251825591602001919060010190620001d1565b5b509050620001fe919062000202565b5090565b5b808211156200021d57600081600090555060010162000203565b5090565b600060028204905060018216806200023a57607f821691505b6020821081141562000251576200025062000257565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611b5180620002966000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461028a578063a9059cbb146102ba578063dd62ed3e146102ea578063f2fde38b1461031a576100f5565b806370a0823114610214578063715018a6146102445780638da5cb5b1461024e57806395d89b411461026c576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b45780636c7e54a6146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610336565b60405161010f91906114bc565b60405180910390f35b610132600480360381019061012d9190611277565b6103c8565b60405161013f91906114a1565b60405180910390f35b6101506103e6565b60405161015d919061161e565b60405180910390f35b610180600480360381019061017b9190611228565b6103f0565b60405161018d91906114a1565b60405180910390f35b61019e6104f1565b6040516101ab9190611639565b60405180910390f35b6101ce60048036038101906101c99190611277565b6104fa565b6040516101db91906114a1565b60405180910390f35b6101fe60048036038101906101f99190611277565b6105a6565b60405161020b919061161e565b60405180910390f35b61022e600480360381019061022991906111c3565b610668565b60405161023b919061161e565b60405180910390f35b61024c6106b0565b005b6102566107ed565b6040516102639190611486565b60405180910390f35b610274610817565b60405161028191906114bc565b60405180910390f35b6102a4600480360381019061029f9190611277565b6108a9565b6040516102b191906114a1565b60405180910390f35b6102d460048036038101906102cf9190611277565b61099d565b6040516102e191906114a1565b60405180910390f35b61030460048036038101906102ff91906111ec565b6109bb565b604051610311919061161e565b60405180910390f35b610334600480360381019061032f91906111c3565b610a42565b005b60606003805461034590611782565b80601f016020809104026020016040519081016040528092919081815260200182805461037190611782565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b60006103dc6103d5610bee565b8484610bf6565b6001905092915050565b6000600254905090565b60006103fd848484610dc1565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610448610bee565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf9061155e565b60405180910390fd5b6104e5856104d4610bee565b85846104e091906116c6565b610bf6565b60019150509392505050565b60006012905090565b600061059c610507610bee565b848460016000610515610bee565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105979190611670565b610bf6565b6001905092915050565b60006105b0610bee565b73ffffffffffffffffffffffffffffffffffffffff166105ce6107ed565b73ffffffffffffffffffffffffffffffffffffffff1614610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b9061157e565b60405180910390fd5b600061062f84610668565b9050828110610642576000915050610662565b6000818461065091906116c6565b905061065c8582611040565b80925050505b92915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106b8610bee565b73ffffffffffffffffffffffffffffffffffffffff166106d66107ed565b73ffffffffffffffffffffffffffffffffffffffff161461072c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107239061157e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461082690611782565b80601f016020809104026020016040519081016040528092919081815260200182805461085290611782565b801561089f5780601f106108745761010080835404028352916020019161089f565b820191906000526020600020905b81548152906001019060200180831161088257829003601f168201915b5050505050905090565b600080600160006108b8610bee565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906115de565b60405180910390fd5b610992610980610bee565b85858461098d91906116c6565b610bf6565b600191505092915050565b60006109b16109aa610bee565b8484610dc1565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4a610bee565b73ffffffffffffffffffffffffffffffffffffffff16610a686107ed565b73ffffffffffffffffffffffffffffffffffffffff1614610abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab59061157e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b25906114fe565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5d906115be565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd9061151e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610db4919061161e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e289061159e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e98906114de565b60405180910390fd5b610eac838383611194565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f299061153e565b60405180910390fd5b8181610f3e91906116c6565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fce9190611670565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611032919061161e565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a7906115fe565b60405180910390fd5b6110bc60008383611194565b80600260008282546110ce9190611670565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111239190611670565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611188919061161e565b60405180910390a35050565b505050565b6000813590506111a881611aed565b92915050565b6000813590506111bd81611b04565b92915050565b6000602082840312156111d557600080fd5b60006111e384828501611199565b91505092915050565b600080604083850312156111ff57600080fd5b600061120d85828601611199565b925050602061121e85828601611199565b9150509250929050565b60008060006060848603121561123d57600080fd5b600061124b86828701611199565b935050602061125c86828701611199565b925050604061126d868287016111ae565b9150509250925092565b6000806040838503121561128a57600080fd5b600061129885828601611199565b92505060206112a9858286016111ae565b9150509250929050565b6112bc816116fa565b82525050565b6112cb8161170c565b82525050565b60006112dc82611654565b6112e6818561165f565b93506112f681856020860161174f565b6112ff81611812565b840191505092915050565b600061131760238361165f565b915061132282611823565b604082019050919050565b600061133a60268361165f565b915061134582611872565b604082019050919050565b600061135d60228361165f565b9150611368826118c1565b604082019050919050565b600061138060268361165f565b915061138b82611910565b604082019050919050565b60006113a360288361165f565b91506113ae8261195f565b604082019050919050565b60006113c660208361165f565b91506113d1826119ae565b602082019050919050565b60006113e960258361165f565b91506113f4826119d7565b604082019050919050565b600061140c60248361165f565b915061141782611a26565b604082019050919050565b600061142f60258361165f565b915061143a82611a75565b604082019050919050565b6000611452601f8361165f565b915061145d82611ac4565b602082019050919050565b61147181611738565b82525050565b61148081611742565b82525050565b600060208201905061149b60008301846112b3565b92915050565b60006020820190506114b660008301846112c2565b92915050565b600060208201905081810360008301526114d681846112d1565b905092915050565b600060208201905081810360008301526114f78161130a565b9050919050565b600060208201905081810360008301526115178161132d565b9050919050565b6000602082019050818103600083015261153781611350565b9050919050565b6000602082019050818103600083015261155781611373565b9050919050565b6000602082019050818103600083015261157781611396565b9050919050565b60006020820190508181036000830152611597816113b9565b9050919050565b600060208201905081810360008301526115b7816113dc565b9050919050565b600060208201905081810360008301526115d7816113ff565b9050919050565b600060208201905081810360008301526115f781611422565b9050919050565b6000602082019050818103600083015261161781611445565b9050919050565b60006020820190506116336000830184611468565b92915050565b600060208201905061164e6000830184611477565b92915050565b600081519050919050565b600082825260208201905092915050565b600061167b82611738565b915061168683611738565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116bb576116ba6117b4565b5b828201905092915050565b60006116d182611738565b91506116dc83611738565b9250828210156116ef576116ee6117b4565b5b828203905092915050565b600061170582611718565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561176d578082015181840152602081019050611752565b8381111561177c576000848401525b50505050565b6000600282049050600182168061179a57607f821691505b602082108114156117ae576117ad6117e3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611af6816116fa565b8114611b0157600080fd5b50565b611b0d81611738565b8114611b1857600080fd5b5056fea264697066735822122046e29921a794b2dcb2c6069605fd3c1d34eea21895910e9d36da73c6c4a2d99364736f6c63430008030033";

export class MyERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyERC20> {
    return super.deploy(overrides || {}) as Promise<MyERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyERC20 {
    return super.attach(address) as MyERC20;
  }
  connect(signer: Signer): MyERC20__factory {
    return super.connect(signer) as MyERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC20Interface {
    return new utils.Interface(_abi) as MyERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC20 {
    return new Contract(address, _abi, signerOrProvider) as MyERC20;
  }
}
